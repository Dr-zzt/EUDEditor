Module SCDBModule
    Public Function ToScdbeps() As String
        Dim strbulider As New System.Text.StringBuilder


        strbulider.AppendLine("import tempcustomText as tct;")
        strbulider.AppendLine("import TriggerEditor as te;")
        strbulider.AppendLine("")
        strbulider.AppendLine("var customMessage = 0;")
        strbulider.AppendLine("const ChecksumValue = EUDArray(list(0xABCDEFED, 0xCBABACDE));")

        strbulider.AppendLine("const Connect = EUDArray(8);")
        strbulider.AppendLine("const Datapage = EUDArray(8);")
        strbulider.AppendLine("const Response = EUDArray(8);")
        strbulider.AppendLine("const Ping = EUDArray(8);")
        strbulider.AppendLine("const Status = EUDArray(8);")
        strbulider.AppendLine("const LastDatapage = EUDArray(8);")
        strbulider.AppendLine("const CheckSum = EUDArray(8);")
        strbulider.AppendLine("const DataChunkCount = EUDArray(8);")
        strbulider.AppendLine("const SaveTimer = EUDArray(8);")
        strbulider.AppendLine("const LoadTimer = EUDArray(8);")
        strbulider.AppendLine("const LastStatus = EUDArray(8);")
        strbulider.AppendLine("const isSaveStart = EUDArray(8);")
        strbulider.AppendLine("const isLoadStart = EUDArray(8);")
        strbulider.AppendLine("")
        strbulider.AppendLine("const mainAddress = 0x58F524;")
        strbulider.AppendLine("const mainAddressEPD = EPD(mainAddress);")
        strbulider.AppendLine("")
        strbulider.AppendLine("const DataArrayLength = 4096;")
        strbulider.AppendLine("const DataArray = EUDArray(DataArrayLength * 8);")
        strbulider.AppendLine("")
        strbulider.AppendLine("var playerCode = 0;")
        strbulider.AppendLine("var DataCount = 0;")


        Dim crc32 As New CRC32


        crc32.GetCRC32(SCDBMapName)






        strbulider.AppendLine("const mapCode = 0x" & Hex(crc32.GetCRC32(SCDBMapName)) & ";")
        strbulider.AppendLine("const MakerCode = 0x" & Hex(crc32.GetCRC32(SCDBMaker)) & ";")
        strbulider.AppendLine("")
        strbulider.AppendLine("const DataSize = " & SCDBDataSize & ";")
        strbulider.AppendLine("const Datas = EUDArray(DataSize * 8);")
        strbulider.AppendLine("")
        strbulider.AppendLine("const VariableCount = " & SCDBVariable.Count & ";")
        strbulider.AppendLine("")
        strbulider.AppendLine("const UnitIndexCount = " & SCDBDeath.Count & ";")


        Dim tstr As String = ""

        For i = 0 To SCDBDeath.Count - 1
            If i = 0 Then
                tstr = SCDBDeath(i)
            Else
                tstr = tstr & ", " & SCDBDeath(i)
            End If
        Next
        If SCDBDeath.Count = 0 Then
            tstr = 0
        End If


        strbulider.AppendLine("const UnitIndex = EUDArray(list(" & tstr & "));")
        strbulider.AppendLine("")
        strbulider.AppendLine("const LocationCount = " & SCDBLoc.Count & ";")



        For i = 0 To SCDBLoc.Count - 1
            If i = 0 Then
                tstr = SCDBLoc(i) - 1
            Else
                tstr = tstr & ", " & SCDBLoc(i) - 1
            End If
        Next
        If SCDBLoc.Count = 0 Then
            tstr = 0
        End If
        strbulider.AppendLine("const LocationSaveIndex = EUDArray(list(" & tstr & "));")


        For i = 0 To SCDBLocLoad.Count - 1
            If i = 0 Then
                tstr = SCDBLocLoad(i) - 1
            Else
                tstr = tstr & ", " & SCDBLocLoad(i) - 1
            End If
        Next
        If SCDBLocLoad.Count = 0 Then
            tstr = 0
        End If

        strbulider.AppendLine("const LocationIndex = EUDArray(list(" & tstr & "));")
        strbulider.AppendLine("")
        strbulider.AppendLine("const DeathsAddress = ((3 + DataSize) / 12) * 12;")
        strbulider.AppendLine("")


        strbulider.AppendLine("function Init() {")
        strbulider.AppendLine("    const operation = py_list();")
        strbulider.AppendLine("    operation.append(list(mainAddressEPD - 2, SetTo, ChecksumValue[0]));")
        strbulider.AppendLine("    SeqCompute(operation);")
        strbulider.AppendLine("}")



        'strbulider.AppendLine("//Status = 0 연결 끊킴")
        'strbulider.AppendLine("//            1 연결 됨, 대기중")
        'strbulider.AppendLine("//            2 연결 중")
        'strbulider.AppendLine("//            3 연결 중 로드")
        'strbulider.AppendLine("//            4 연결 중 세이브")
        'strbulider.AppendLine("//            5 세이브 중")
        'strbulider.AppendLine("//            6 로드 중")
        'strbulider.AppendLine("")
        'strbulider.AppendLine("//Connect = 0 연결 끊킴")
        'strbulider.AppendLine("//               1 연결됨(데이터없음)")
        'strbulider.AppendLine("//               2 연결됨(데이터있음)")
        'strbulider.AppendLine("//               3 저장 중")
        'strbulider.AppendLine("//               4 로드 중")
        strbulider.AppendLine("function GetStatus() {")
        strbulider.AppendLine("    return Status[getcurpl()];")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function GetLastMsg() {")
        strbulider.AppendLine("    return LastStatus[getcurpl()];")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function msgReset() {")
        strbulider.AppendLine("    LastStatus[getcurpl()] = 0;")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function UseCustomMsg(Use) {")
        strbulider.AppendLine("    customMessage = Use;")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function GetPlayerCode();")
        strbulider.AppendLine("function count_at_loc(player, units, loc);")
        strbulider.AppendLine("function SCDBExec();")
        strbulider.AppendLine("function SetIndexedValue(Vindex, Value);")
        strbulider.AppendLine("function GetIndexedValue(Vindex);")
        strbulider.AppendLine("function QCOff();")
        strbulider.AppendLine("function QCOn();")
        strbulider.AppendLine("function ReadPacket();")
        strbulider.AppendLine("function ReadData();")
        strbulider.AppendLine("function WriteData();")
        strbulider.AppendLine("function WriteConnect(Value);")
        strbulider.AppendLine("function WriteDatapage(Value);")
        strbulider.AppendLine("function WriteRespons(Value);")
        strbulider.AppendLine("function WriteChecksum(Value);")
        strbulider.AppendLine("function LoadStart();")
        strbulider.AppendLine("function LoadExec();")
        strbulider.AppendLine("function SaveDataLoad();")
        strbulider.AppendLine("function SaveStart();")
        strbulider.AppendLine("function SaveExec();")
        strbulider.AppendLine("function Login();")
        strbulider.AppendLine("function LoginExec();")
        strbulider.AppendLine("function GetPlayerCode() {")
        strbulider.AppendLine("    if (IsUserCP()) {")
        strbulider.AppendLine("        const cp = getcurpl();")
        strbulider.AppendLine("        const dst = EPD(0x57EEE8) + 9 * cp;")
        strbulider.AppendLine("        var Value = dwread_epd(dst) / 0x1000000;")
        strbulider.AppendLine("        for(var i = 1 ; i < 7 ; i++) {")
        strbulider.AppendLine("            Value += dwread_epd(dst + i);")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("        playerCode = Value;")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function count_at_loc(player: TrgPlayer, units: TrgUnit, loc) {")
        strbulider.AppendLine("    var x = 2047;")
        strbulider.AppendLine("    foreach(i : py_range(10, -1, -1)) {")
        strbulider.AppendLine("        if(x >= py_pow(2, i)) {")
        strbulider.AppendLine("            x -= py_pow(2, i);")
        strbulider.AppendLine("            if(!Bring(player, AtMost, x, units, loc+1)) {")
        strbulider.AppendLine("                x += py_pow(2, i);")
        strbulider.AppendLine("            }")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    return x;")
        strbulider.AppendLine("    //made by Artanis[M] & safhfh & Jpoker & trgk;")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function SCDBExec() {")
        strbulider.AppendLine("    const cp = getcurpl();")
        strbulider.AppendLine("    dwsubtract_epd(EPD(SaveTimer) + cp, 1);")
        strbulider.AppendLine("    dwsubtract_epd(EPD(LoadTimer) + cp, 1);")
        strbulider.AppendLine("    if(Status[cp] == 5 && SaveTimer[cp] == 0) {")
        strbulider.AppendLine("        SaveExec();")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    if(Status[cp] == 6 && LoadTimer[cp] == 0) {")
        strbulider.AppendLine("        LoadExec();")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    if(Status[cp] >= 2 && Status[cp] <= 4) {")
        strbulider.AppendLine("        LoginExec();")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    if(isSaveStart[cp] == 1) {")
        strbulider.AppendLine("        SaveStart();")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    if(isLoadStart[cp] == 1) {")
        strbulider.AppendLine("        LoadStart();")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function SetIndexedValue(Vindex ,Value) {")
        strbulider.AppendLine("    switch(Vindex) {")

        For i = 0 To SCDBVariable.Count - 1

            strbulider.AppendLine("        case " & i & ":")
            strbulider.AppendLine("            te." & SCDBVariable(i) & " = Value;")
            strbulider.AppendLine("        break;")

        Next




        strbulider.AppendLine("    }")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function GetIndexedValue(Vindex) {")
        strbulider.AppendLine("    switch(Vindex) {")
        For i = 0 To SCDBVariable.Count - 1

            strbulider.AppendLine("        case " & i & ":")
            strbulider.AppendLine("            return te." & SCDBVariable(i) & ";")
            strbulider.AppendLine("        break;")

        Next
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    return 0;")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function QCOff() {")
        strbulider.AppendLine("    Trigger(IsUserCP(), SetMemoryEPD(mainAddressEPD - 1, SetTo, 0));")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function QCOn() {")
        strbulider.AppendLine("    Trigger(IsUserCP(), SetMemoryEPD(mainAddressEPD - 1, SetTo, 1));")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function ReadPacket() {")
        strbulider.AppendLine("    const cp = getcurpl();")
        strbulider.AppendLine("    const tConnect = dwread_epd(mainAddressEPD + 12 * 1 + DeathsAddress + cp);")
        strbulider.AppendLine("    const tDatapage = dwread_epd(mainAddressEPD + 12 * 2 + DeathsAddress + cp);")
        strbulider.AppendLine("    const tResponse = dwread_epd(mainAddressEPD + 12 * 3 + DeathsAddress + cp);")
        strbulider.AppendLine("    const tChecksum = dwread_epd(mainAddressEPD + 12 * 4 + DeathsAddress + cp);")
        strbulider.AppendLine("    if(tConnect != 0) {")
        strbulider.AppendLine("        Connect[cp] = tConnect - 1;")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    if(tDatapage != 0) {")
        strbulider.AppendLine("        Datapage[cp] = tDatapage - 1;")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    if(tResponse != 0) {")
        strbulider.AppendLine("        Response[cp] = tResponse - 1;")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    if(tChecksum != 0) {")
        strbulider.AppendLine("        CheckSum[cp] = tChecksum - 1;")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function ReadData() {")
        strbulider.AppendLine("    const cp = getcurpl();")
        strbulider.AppendLine("    var tCheckSum = 0;")
        strbulider.AppendLine("    var dst = mainAddressEPD + 12 * 5 + DeathsAddress + cp;")
        strbulider.AppendLine("    var index = DataSize * cp;")
        strbulider.AppendLine("    for(var i = 0 ; i < DataSize ; SetVariables(list(i, index, dst), list(1, 1, 12), list(Add, Add, Add))) {")
        strbulider.AppendLine("        Datas[index] = dwread_epd(dst);")
        strbulider.AppendLine("        tCheckSum += Datas[index];")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    tCheckSum %= 1000000;")
        strbulider.AppendLine("    return l2v(tCheckSum == CheckSum[cp]);")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function WriteData() {")
        strbulider.AppendLine("    const cp = getcurpl();")
        strbulider.AppendLine("    var tCheckSum = 0;")
        strbulider.AppendLine("    var index = DataSize * cp;")
        strbulider.AppendLine("    for(var i = 0 ; i < DataSize ; SetVariables(list(i, index), list(1, 1), list(Add, Add))) {")
        strbulider.AppendLine("        if(IsUserCP()) {")
        strbulider.AppendLine("            SetMemoryEPD(mainAddressEPD + 4 + i, SetTo, Datas[index]);")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("        tCheckSum += Datas[index];")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    tCheckSum %= 1000000;")
        strbulider.AppendLine("    WriteChecksum(tCheckSum);")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function WriteConnect(Value) {")
        strbulider.AppendLine("    if(IsUserCP()) {")
        strbulider.AppendLine("        VProc(Value, list(Value.SetDest(mainAddressEPD), Value.AddNumber(1)));")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function WriteDatapage(Value) {")
        strbulider.AppendLine("    if(IsUserCP()) {")
        strbulider.AppendLine("        VProc(Value, list(Value.SetDest(mainAddressEPD + 1), Value.AddNumber(1)));")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function WriteRespons(Value) {")
        strbulider.AppendLine("    if(IsUserCP()) {")
        strbulider.AppendLine("        VProc(Value, list(Value.SetDest(mainAddressEPD + 2), Value.AddNumber(1)));")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function WriteChecksum(Value) {")
        strbulider.AppendLine("    if(IsUserCP()) {")
        strbulider.AppendLine("        VProc(Value, list(Value.SetDest(mainAddressEPD + 3), Value.AddNumber(1)));")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function LoadStart() {")
        strbulider.AppendLine("    const cp = getcurpl();")
        strbulider.AppendLine("    if(LoadTimer[cp] > 0) return;")
        strbulider.AppendLine("    epdswitch(EPD(Status) + cp) {")
        strbulider.AppendLine("        case 0:")
        strbulider.AppendLine("            Status[cp] = 3;")
        strbulider.AppendLine("            LastStatus[cp] = 3;")
        strbulider.AppendLine("            Login();")
        strbulider.AppendLine("        break;")
        strbulider.AppendLine("        case 1:")
        strbulider.AppendLine("            QCOn();")
        strbulider.AppendLine("            ReadPacket();")
        strbulider.AppendLine("            if(Connect[cp] == 1) {")
        strbulider.AppendLine("                Status[cp] = 1;")
        strbulider.AppendLine("                LastStatus[cp] = 2;")
        strbulider.AppendLine("                if(customMessage == 0) {")
        strbulider.AppendLine("                    PlayWAV(""sound\\misc\\outofgas.wav"");")
        strbulider.AppendLine("                    tct.chatAnnouncement(""\x08데이터 파일\x04이 없습니다."");")
        strbulider.AppendLine("                }")
        strbulider.AppendLine("                isLoadStart[cp] = 0;")
        strbulider.AppendLine("                QCOff();")
        strbulider.AppendLine("            } else if(Connect[cp] == 2) {")
        strbulider.AppendLine("                isLoadStart[cp] = 0;")
        strbulider.AppendLine("                WriteConnect(4);")
        strbulider.AppendLine("                WriteDatapage(0);")
        strbulider.AppendLine("                Status[cp] = 6;")
        strbulider.AppendLine("                LastStatus[cp] = 6;")
        strbulider.AppendLine("            }")
        strbulider.AppendLine("        break;")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function LoadExec() {")
        strbulider.AppendLine("    const cp = getcurpl();")
        strbulider.AppendLine("    ReadPacket();")
        strbulider.AppendLine("    LastStatus[cp] = 4;")
        strbulider.AppendLine("    if(customMessage == 0) {")
        strbulider.AppendLine("        tct.chatAnnouncement(""\x03데이터\x04를 \x07불러오는 중"");")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    if(Datapage[cp] >= 999999) {")
        strbulider.AppendLine("        LoadTimer[cp] = 60;")
        strbulider.AppendLine("        Ping[cp] = 0;")
        strbulider.AppendLine("        Status[cp] = 1;")
        strbulider.AppendLine("        LastStatus[cp] = 5;")
        strbulider.AppendLine("        Datapage[cp] = 0;")
        strbulider.AppendLine("        WriteConnect(2);")
        strbulider.AppendLine("        WriteRespons(0);")
        strbulider.AppendLine("        WriteDatapage(0);")
        strbulider.AppendLine("        QCOff();")
        strbulider.AppendLine("        if(customMessage == 0) {")
        strbulider.AppendLine("            PlayWAV(""sound\\misc\\tdrtra00.wav"");")
        strbulider.AppendLine("            tct.chatAnnouncement(""\x03데이터\x04를 \x07성공적으로 불러왔습니다."");")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("        const dataStart = cp * DataArrayLength;")
        strbulider.AppendLine("        for(var i = 0 ; i < (LastDatapage[cp] - 1) * DataSize ; i++) {")
        strbulider.AppendLine("            var tDataValue = DataArray[i + dataStart];")
        strbulider.AppendLine("            if(tDataValue == 999999) continue;")
        strbulider.AppendLine("            const q, r = div(tDataValue, 1000);")
        strbulider.AppendLine("            switch(tDataValue / 100000) {")
        strbulider.AppendLine("            if (tDataValue < 100000) {")
        strbulider.AppendLine("                SetIndexedValue(q, r);")
        strbulider.AppendLine("            } else if (tDataValue < 200000) {")
        strbulider.AppendLine("                const tValue = r * 1000000;")
        strbulider.AppendLine("                i += 1;")
        strbulider.AppendLine("                tDataValue = DataArray[i + dataStart];")
        strbulider.AppendLine("                SetIndexedValue(q - 100, tValue + tDataValue);")
        strbulider.AppendLine("            } else if (tDataValue < 300000) {")
        strbulider.AppendLine("                i += 1;")
        strbulider.AppendLine("                tDataValue = DataArray[i + dataStart];")
        strbulider.AppendLine("                const tValue = tDataValue * 1000000;")
        strbulider.AppendLine("                i += 1;")
        strbulider.AppendLine("                tDataValue = DataArray[i + dataStart];")
        strbulider.AppendLine("                SetIndexedValue(q - 200, tValue + tDataValue);")
        strbulider.AppendLine("            } else if (tDataValue < 400000) {")
        strbulider.AppendLine("                CreateUnit(1, r, LocationIndex[q - 300] + 1, CurrentPlayer);")
        strbulider.AppendLine("            } else if (tDataValue < 500000) {")
        strbulider.AppendLine("                i += 1;")
        strbulider.AppendLine("                tDataValue = DataArray[i + dataStart];")
        strbulider.AppendLine("                const UnitNum, tValue = div(tDataValue, 1000);")
        strbulider.AppendLine("                CreateUnit(tValue, UnitNum, LocationIndex[q - 400] + 1, CurrentPlayer);")
        strbulider.AppendLine("            } else if (tDataValue < 600000) {")
        strbulider.AppendLine("                SetDeaths(CurrentPlayer, SetTo, r, UnitIndex[q - 500]);")
        strbulider.AppendLine("            } else if (tDataValue < 700000) {")
        strbulider.AppendLine("                const tValue = r * 1000000;")
        strbulider.AppendLine("                i += 1;")
        strbulider.AppendLine("                tDataValue = DataArray[i + dataStart];")
        strbulider.AppendLine("                SetDeaths(CurrentPlayer, SetTo, tValue + tDataValue, UnitIndex[q - 600]);")
        strbulider.AppendLine("            } else if (tDataValue < 800000) {")
        strbulider.AppendLine("                i += 1;")
        strbulider.AppendLine("                tDataValue = DataArray[i + dataStart];")
        strbulider.AppendLine("                const tValue = tDataValue * 1000000;")
        strbulider.AppendLine("                i += 1;")
        strbulider.AppendLine("                tDataValue = DataArray[i + dataStart];")
        strbulider.AppendLine("                SetDeaths(CurrentPlayer, SetTo, tValue + tDataValue, UnitIndex[q - 700]);")
        strbulider.AppendLine("            }")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("        return;")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    if(Response[cp] == 1 && ReadData()) {")
        strbulider.AppendLine("        Ping[cp] = 0;")
        strbulider.AppendLine("        const myPage = Datapage[cp];")
        strbulider.AppendLine("        var index1 = (myPage - 2) * DataSize + DataArrayLength * cp;")
        strbulider.AppendLine("        var index2 = DataSize * cp;")
        strbulider.AppendLine("        for(var i = 0 ; i < DataSize ; SetVariables(list(i, index1, index2), list(1, 1, 1), list(Add, Add, Add))) {")
        strbulider.AppendLine("            DataArray[index1] = Datas[index2];")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("        LastDatapage[cp] = myPage;")
        strbulider.AppendLine("        WriteRespons(2);")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    Ping[cp] += 1;")
        strbulider.AppendLine("    if(Ping[cp] >= 100) {")
        strbulider.AppendLine("        Connect[cp] = 0;")
        strbulider.AppendLine("        Status[cp] = 0;")
        strbulider.AppendLine("        LastStatus[cp] = 8;")
        strbulider.AppendLine("        if(customMessage == 0) {")
        strbulider.AppendLine("            PlayWAV(""sound\\misc\\outofgas.wav"");")
        strbulider.AppendLine("            tct.chatAnnouncement(""\x08런처와 연결이 끊어졌습니다."");")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("        const inits = list(SetMemoryEPD(mainAddressEPD - 1, SetTo, 0));")
        strbulider.AppendLine("        foreach(n : py_range(8)) {")
        strbulider.AppendLine("            inits.append(SetMemoryEPD(mainAddressEPD + n, SetTo, 1));")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("        Trigger(IsUserCP(), inits);")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function SaveDataLoad() {")
        strbulider.AppendLine("    const cp = getcurpl();")
        strbulider.AppendLine("    const dataStart = cp * DataArrayLength;")
        strbulider.AppendLine("    var Index = 0;")
        strbulider.AppendLine("    for(var i, i1000 = 0, 0 ; i < VariableCount ; SetVariables(list(i, i1000), list(1, 1000), list(Add, Add))) {")
        strbulider.AppendLine("        var tValue = GetIndexedValue(i);")
        strbulider.AppendLine("        if(tValue <= 999) {")
        strbulider.AppendLine("            DataArray[Index + dataStart] = tValue + i1000;")
        strbulider.AppendLine("            Index += 1;")
        strbulider.AppendLine("        } else if(tValue <= 999999999) {")
        strbulider.AppendLine("            const q, r = div(tValue, 1000000);")
        strbulider.AppendLine("            DataArray[Index + dataStart] = q + i1000 + 100000;")
        strbulider.AppendLine("            Index += 1;")
        strbulider.AppendLine("            DataArray[Index + dataStart] = r;")
        strbulider.AppendLine("            Index += 1;")
        strbulider.AppendLine("        } else {")
        strbulider.AppendLine("            DataArray[Index + dataStart] = i1000 + 200000;")
        strbulider.AppendLine("            Index += 1;")
        strbulider.AppendLine("            const q, r = div(tValue, 1000000);")
        strbulider.AppendLine("            DataArray[Index + dataStart] = q % 1000000;")
        strbulider.AppendLine("            Index += 1;")
        strbulider.AppendLine("            DataArray[Index + dataStart] = r;")
        strbulider.AppendLine("            Index += 1;")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    for(var i, i1000 = 0, 0 ; i < UnitIndexCount ; SetVariables(list(i, i1000), list(1, 1000), list(Add, Add))) {")
        strbulider.AppendLine("        const tValue = dwread_epd(12 * UnitIndex[i] + cp);")
        strbulider.AppendLine("        if(tValue <= 999) {")
        strbulider.AppendLine("            DataArray[Index + dataStart] = tValue + i1000 + 500000;")
        strbulider.AppendLine("            Index += 1;")
        strbulider.AppendLine("        } else  if(tValue <= 999999999) {")
        strbulider.AppendLine("            const q, r = div(tValue, 1000000);")
        strbulider.AppendLine("            DataArray[Index + dataStart] = q + i1000 + 600000;")
        strbulider.AppendLine("            Index += 1;")
        strbulider.AppendLine("            DataArray[Index + dataStart] = r;")
        strbulider.AppendLine("            Index += 1;")
        strbulider.AppendLine("        } else {")
        strbulider.AppendLine("            const q, r = div(tValue, 1000000);")
        strbulider.AppendLine("            DataArray[Index + dataStart] = i1000 + 700000;")
        strbulider.AppendLine("            Index += 1;")
        strbulider.AppendLine("            DataArray[Index + dataStart] = q % 1000000;")
        strbulider.AppendLine("            Index += 1;")
        strbulider.AppendLine("            DataArray[Index + dataStart] = r;")
        strbulider.AppendLine("            Index += 1;")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    for(var i, i1000 = 0, 0 ; i < LocationCount ; SetVariables(list(i, i1000), list(1, 1000), list(Add, Add))) {")
        strbulider.AppendLine("        for(var j, epd, subp = 0, EPD(0x6637A0), 0 ; j < 228 ; SetVariables(list(j, subp), list(1, 1), list(Add, Add)), Trigger(subp >= 4, list(subp.SetNumber(0), epd.AddNumber(1)))) {")
        strbulider.AppendLine("            const check = bread_epd(epd, subp);")
        strbulider.AppendLine("            if(check.ExactlyX(0, 8)) continue;")
        strbulider.AppendLine("            const unitCount = count_at_loc(cp, j, LocationSaveIndex[i]);")
        strbulider.AppendLine("            if(unitCount == 1) {")
        strbulider.AppendLine("                DataArray[Index + dataStart] = i1000 + j + 300000;")
        strbulider.AppendLine("                Index += 1;")
        strbulider.AppendLine("            } else if(unitCount > 1) {")
        strbulider.AppendLine("                DataArray[Index + dataStart] = i1000 + 400000;")
        strbulider.AppendLine("                Index += 1;")
        strbulider.AppendLine("                DataArray[Index + dataStart] = j * 1000 + unitCount;")
        strbulider.AppendLine("                Index += 1;")
        strbulider.AppendLine("            }")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    DataChunkCount[cp] = Index;")
        strbulider.AppendLine("    /*테스트")
        strbulider.AppendLine("    DataArray[0] = 300037;")
        strbulider.AppendLine("    DataArray[1] = 300038;")
        strbulider.AppendLine("    DataArray[2] = 300039;")
        strbulider.AppendLine("    DataArray[3] = 300040;")
        strbulider.AppendLine("    DataArray[4] = 300041;")
        strbulider.AppendLine("    DataArray[5] = 300042;")
        strbulider.AppendLine("    DataArray[6] = 300043;")
        strbulider.AppendLine("    DataArray[7] = 300044;")
        strbulider.AppendLine("    DataArray[8] = 300045;")
        strbulider.AppendLine("    DataChunkCount[cp] = 9;")
        strbulider.AppendLine("    */")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function SaveStart() {")
        strbulider.AppendLine("    const cp = getcurpl();")
        strbulider.AppendLine("    if(SaveTimer[cp] != 0) return;")
        strbulider.AppendLine("    epdswitch(EPD(Status) + cp) {")
        strbulider.AppendLine("        case 0:")
        strbulider.AppendLine("            Status[cp] = 4;")
        strbulider.AppendLine("            LastStatus[cp] = 4;")
        strbulider.AppendLine("            Login();")
        strbulider.AppendLine("        break;")
        strbulider.AppendLine("        case 1:")
        strbulider.AppendLine("            Ping[cp] += 1;")
        strbulider.AppendLine("            QCOn();")
        strbulider.AppendLine("            ReadPacket();")
        strbulider.AppendLine("            if(Datapage[cp] == 0 && Connect[cp] >= 1 && Connect[cp] <= 2) {")
        strbulider.AppendLine("                isSaveStart[cp] = 0;")
        strbulider.AppendLine("                Ping[cp] = 0;")
        strbulider.AppendLine("                WriteConnect(3);")
        strbulider.AppendLine("                WriteDatapage(0);")
        strbulider.AppendLine("                SaveDataLoad();")
        strbulider.AppendLine("                Status[cp] = 5;")
        strbulider.AppendLine("                LastStatus[cp] = 6;")
        strbulider.AppendLine("            } else {")
        strbulider.AppendLine("                WriteDatapage(0);")
        strbulider.AppendLine("            }")
        strbulider.AppendLine("            if(Ping[cp] >= 100) {")
        strbulider.AppendLine("                Connect[cp] = 0;")
        strbulider.AppendLine("                Status[cp] = 0;")
        strbulider.AppendLine("                LastStatus[cp] = 8;")
        strbulider.AppendLine("                isSaveStart[cp] = 0;")
        strbulider.AppendLine("                if(customMessage == 0) {")
        strbulider.AppendLine("                    PlayWAV(""sound\\misc\\outofgas.wav"");")
        strbulider.AppendLine("                    tct.chatAnnouncement(""\x08런처와 연결이 끊어졌습니다."");")
        strbulider.AppendLine("                }")
        strbulider.AppendLine("                const inits = list(SetMemoryEPD(mainAddressEPD - 1, SetTo, 0));")
        strbulider.AppendLine("                foreach(n : py_range(8)) {")
        strbulider.AppendLine("                    inits.append(SetMemoryEPD(mainAddressEPD + n, SetTo, 1));")
        strbulider.AppendLine("                }")
        strbulider.AppendLine("                Trigger(IsUserCP(), inits);")
        strbulider.AppendLine("            }")
        strbulider.AppendLine("        break;")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function SaveExec() {")
        strbulider.AppendLine("    const cp = getcurpl();")
        strbulider.AppendLine("    ReadPacket();")
        strbulider.AppendLine("    LastStatus[cp] = 6;")
        strbulider.AppendLine("    if(customMessage == 0) {")
        strbulider.AppendLine("        tct.chatAnnouncement(""\x07데이터\x04를 \x1F저장하는 중..."");")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    if(Response[cp] == 1) {")
        strbulider.AppendLine("        Ping[cp] = 0;")
        strbulider.AppendLine("        const myCount = DataSize * (Datapage[cp] - 1);")
        strbulider.AppendLine("        const mySize = cp * DataSize;")
        strbulider.AppendLine("        const dataStart = cp * DataArrayLength;")
        strbulider.AppendLine("        for(var i = 0 ; i < DataSize ; i++) {")
        strbulider.AppendLine("            const index = i + mySize;")
        strbulider.AppendLine("            if(DataChunkCount[cp] <= i + myCount) {")
        strbulider.AppendLine("                Datas[index] = 999999;")
        strbulider.AppendLine("            } else {")
        strbulider.AppendLine("                Datas[index] = DataArray[i + myCount + dataStart];")
        strbulider.AppendLine("            }")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("        WriteData();")
        strbulider.AppendLine("        if(DataChunkCount[cp] <= myCount) {")
        strbulider.AppendLine("            WriteRespons(3);")
        strbulider.AppendLine("            Status[cp] = 1;")
        strbulider.AppendLine("            LastStatus[cp] = 7;")
        strbulider.AppendLine("            Response[cp] = 0;")
        strbulider.AppendLine("            Connect[cp] = 2;")
        strbulider.AppendLine("            QCOff();")
        strbulider.AppendLine("            SaveTimer[cp] = 60;")
        strbulider.AppendLine("            if(customMessage == 0) {")
        strbulider.AppendLine("                PlayWAV(""sound\\misc\\tdrtra00.wav"");")
        strbulider.AppendLine("                tct.chatAnnouncement(""\x03데이터\x04를 \x1F성공적으로 저장했습니다."");")
        strbulider.AppendLine("            }")
        strbulider.AppendLine("        } else if(ReadData()) {")
        strbulider.AppendLine("            WriteRespons(2);")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    Ping[cp] += 1;")
        strbulider.AppendLine("    if(Ping[cp] >= 100) {")
        strbulider.AppendLine("        Connect[cp] = 0;")
        strbulider.AppendLine("        Status[cp] = 0;")
        strbulider.AppendLine("        LastStatus[cp] = 8;")
        strbulider.AppendLine("        if(customMessage == 0) {")
        strbulider.AppendLine("            PlayWAV(""sound\\misc\\outofgas.wav"");")
        strbulider.AppendLine("            tct.chatAnnouncement(""\x08런처와 연결이 끊어졌습니다."");")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("        const inits = list(SetMemoryEPD(mainAddressEPD - 1, SetTo, 0));")
        strbulider.AppendLine("        foreach(n : py_range(8)) {")
        strbulider.AppendLine("            inits.append(SetMemoryEPD(mainAddressEPD + n, SetTo, 1));")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("        Trigger(IsUserCP(), inits);")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function Login() {")
        strbulider.AppendLine("    const cp = getcurpl();")
        strbulider.AppendLine("    Ping[cp] = 0;")
        strbulider.AppendLine("    if (IsUserCP()) {")
        strbulider.AppendLine("        GetPlayerCode();")
        strbulider.AppendLine("        DataCount = VariableCount + UnitIndexCount + LocationCount;")
        strbulider.AppendLine("        const operation = list(mainAddressEPD - 1, SetTo, 1),")
        strbulider.AppendLine("            list(mainAddressEPD, SetTo, 0x12348765),")
        strbulider.AppendLine("            list(mainAddressEPD + 1, SetTo, 0x9ABCF1DE),")
        strbulider.AppendLine("            list(mainAddressEPD + 2, SetTo, 0x23458967),")
        strbulider.AppendLine("            list(mainAddressEPD + 3, SetTo, mapCode),")
        strbulider.AppendLine("            list(mainAddressEPD + 4, SetTo, MakerCode),")
        strbulider.AppendLine("            list(mainAddressEPD + 5, SetTo, playerCode),")
        strbulider.AppendLine("            list(mainAddressEPD + 6, SetTo, DataCount),")
        strbulider.AppendLine("            list(mainAddressEPD + 7, SetTo, DataSize);")
        strbulider.AppendLine("        NonSeqCompute(operation);")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("}")
        strbulider.AppendLine("function LoginExec() {")
        strbulider.AppendLine("    const cp = getcurpl();")
        strbulider.AppendLine("    LastStatus[cp] = 1;")
        strbulider.AppendLine("    if(customMessage == 0) {")
        strbulider.AppendLine("        tct.chatAnnouncement(""\x07런처\x04의 응답을 \x03기다리는 중 입니다.\x04... \x05"", Ping[cp], """");")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    ReadPacket();")
        strbulider.AppendLine("")
        strbulider.AppendLine("    if(Ping[cp] >= 50) {")
        strbulider.AppendLine("        if(Status[cp] == 4 && Connect[cp] >= 1 && Connect[cp] <= 2) {")
        strbulider.AppendLine("            SaveDataLoad();")
        strbulider.AppendLine("            WriteConnect(3);")
        strbulider.AppendLine("            SaveDataLoad();")
        strbulider.AppendLine("            Ping[cp] = 0;")
        strbulider.AppendLine("            Status[cp] = 5;")
        strbulider.AppendLine("            LastStatus[cp] = 3;")
        strbulider.AppendLine("            SaveTimer[cp] = 60;")
        strbulider.AppendLine("            isSaveStart[cp] = 0;")
        strbulider.AppendLine("            if(customMessage == 0) {")
        strbulider.AppendLine("                PlayWAV(""sound\\misc\\trescue.wav"");")
        strbulider.AppendLine("                tct.chatAnnouncement(""\x07런처\x04와 \x03연결되었습니다."");")
        strbulider.AppendLine("            }")
        strbulider.AppendLine("        } else if(Status[cp] == 3) {")
        strbulider.AppendLine("            if(Connect[cp] == 2) {")
        strbulider.AppendLine("                WriteConnect(4);")
        strbulider.AppendLine("                WriteDatapage(0);")
        strbulider.AppendLine("                Ping[cp] = 0;")
        strbulider.AppendLine("                Status[cp] = 6;")
        strbulider.AppendLine("                LastStatus[cp] = 3;")
        strbulider.AppendLine("                LoadTimer[cp] = 60;")
        strbulider.AppendLine("                isLoadStart[cp] = 0;")
        strbulider.AppendLine("                if(customMessage == 0) {")
        strbulider.AppendLine("                    PlayWAV(""sound\\misc\\trescue.wav"");")
        strbulider.AppendLine("                    tct.chatAnnouncement(""\x07런처\x04와 \x03연결되었습니다."");")
        strbulider.AppendLine("                }")
        strbulider.AppendLine("            } else if(Connect[cp] == 1) {")
        strbulider.AppendLine("                isLoadStart[cp] = 0;")
        strbulider.AppendLine("                Ping[cp] = 0;")
        strbulider.AppendLine("                Status[cp] = 1;")
        strbulider.AppendLine("                LastStatus[cp] = 2;")
        strbulider.AppendLine("                if(customMessage == 0) {")
        strbulider.AppendLine("                    PlayWAV(""sound\\misc\\outofgas.wav"");")
        strbulider.AppendLine("                    tct.chatAnnouncement(""\x08데이터 파일\x04이 없습니다."");")
        strbulider.AppendLine("                }")
        strbulider.AppendLine("                QCOff();")
        strbulider.AppendLine("            }")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    Ping[cp] += 1;")
        strbulider.AppendLine("    if(Ping[cp] >= 200) {")
        strbulider.AppendLine("        Connect[cp] = 0;")
        strbulider.AppendLine("        Status[cp] = 0;")
        strbulider.AppendLine("        LastStatus[cp] = 9;")
        strbulider.AppendLine("        isLoadStart[cp] = 0;")
        strbulider.AppendLine("        isSaveStart[cp] = 0;")
        strbulider.AppendLine("        if(customMessage == 0) {")
        strbulider.AppendLine("            PlayWAV(""sound\\misc\\outofgas.wav"");")
        strbulider.AppendLine("            tct.chatAnnouncement(""\x08런처를 확인하지 못했습니다."");")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("        const inits = list(SetMemoryEPD(mainAddressEPD - 1, SetTo, 0));")
        strbulider.AppendLine("        foreach(n : py_range(8)) {")
        strbulider.AppendLine("            inits.append(SetMemoryEPD(mainAddressEPD + n, SetTo, 1));")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("        Trigger(IsUserCP(), inits);")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("    const tCheckLogout = dwread_epd(mainAddressEPD + 12 * 8 + cp + DeathsAddress);")
        strbulider.AppendLine("    if(tCheckLogout == 999998) {")
        strbulider.AppendLine("        Connect[cp] = 0;")
        strbulider.AppendLine("        Status[cp] = 0;")
        strbulider.AppendLine("        LastStatus[cp] = 9;")
        strbulider.AppendLine("        isLoadStart[cp] = 0;")
        strbulider.AppendLine("        isSaveStart[cp] = 0;")
        strbulider.AppendLine("        if(customMessage == 0) {")
        strbulider.AppendLine("            PlayWAV(""sound\\misc\\outofgas.wav"");")
        strbulider.AppendLine("            tct.chatAnnouncement(""\x08런처가 연결을 강제로 끊었습니다."");")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("        const inits = list(SetMemoryEPD(mainAddressEPD - 1, SetTo, 0));")
        strbulider.AppendLine("        foreach(n : py_range(8)) {")
        strbulider.AppendLine("            inits.append(SetMemoryEPD(mainAddressEPD + n, SetTo, 1));")
        strbulider.AppendLine("        }")
        strbulider.AppendLine("        Trigger(IsUserCP(), inits);")
        strbulider.AppendLine("    } else if(tCheckLogout == 1000000) {")
        strbulider.AppendLine("        Defeat();")
        strbulider.AppendLine("    }")
        strbulider.AppendLine("}")

        Return strbulider.ToString
    End Function
End Module
